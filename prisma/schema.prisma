// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model GuildSettings {
    id                              Int         @id @default(autoincrement())
    guildId                         String      @unique
    allowedCollectData              Boolean     @default(false)
    lastDataCollectedDate           DateTime?
    enabledRolesRecovery            Boolean     @default(false)
    enabledUserBindingGroup         Boolean     @default(false)
    createdAt                       DateTime    @default(now())
    updatedAt                       DateTime    @updatedAt
}

model DiscordAccount {
    id                  Int         @id @default(autoincrement())
    userId              String      @unique
    username            String      @unique
}

model MemberRole {
    id                  Int         @id @default(autoincrement())
    guildId             String
    userId              String
    roleIds             String
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt

    @@unique([guildId, userId])
}

model UserBindingGroup {
    id                  Int         @id @default(autoincrement())
    userId              String      @unique
    parentUserId        String
    isParent            Boolean     @default(false)
    request             UserBindingGroupRequest?
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
}

model UserBindingGroupRequest {
    id                  Int                 @id @default(autoincrement())
    userId              String
    targetUserId        String
    status              String              @default("pending")
    userBindingGroup    UserBindingGroup?   @relation(fields: [userBindingGroupId], references: [id])
    userBindingGroupId  Int?                @unique
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
}

model MagicLink {
    id                  Int         @id @default(autoincrement())
    guildId             String
    userId              String
    code                String
    invitationLink      String      @unique
    roleId              String
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
}